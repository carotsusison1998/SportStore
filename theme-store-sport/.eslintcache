[{"E:\\SportStore\\theme-store-sport\\src\\App.js":"1","E:\\SportStore\\theme-store-sport\\src\\components\\brands\\InsertBrand.js":"2","E:\\SportStore\\theme-store-sport\\src\\components\\products\\ListProduct.js":"3","E:\\SportStore\\theme-store-sport\\src\\libs\\libs.js":"4","E:\\SportStore\\theme-store-sport\\src\\components\\users\\Login.js":"5","E:\\SportStore\\theme-store-sport\\src\\router\\RouterLink.js":"6","E:\\SportStore\\theme-store-sport\\src\\components\\products\\InsertProduct.js":"7","E:\\SportStore\\theme-store-sport\\src\\components\\headers\\Header.js":"8","E:\\SportStore\\theme-store-sport\\src\\index.js":"9","E:\\SportStore\\theme-store-sport\\src\\components\\homes\\ShowProduct.js":"10"},{"size":1250,"mtime":1612756460242,"results":"11","hashOfConfig":"12"},{"size":2721,"mtime":1612624407586,"results":"13","hashOfConfig":"12"},{"size":2333,"mtime":1612747357163,"results":"14","hashOfConfig":"12"},{"size":817,"mtime":1612274902516,"results":"15","hashOfConfig":"12"},{"size":6735,"mtime":1612755037293,"results":"16","hashOfConfig":"12"},{"size":1158,"mtime":1612753869672,"results":"17","hashOfConfig":"12"},{"size":6725,"mtime":1612274902495,"results":"18","hashOfConfig":"12"},{"size":3850,"mtime":1612756758368,"results":"19","hashOfConfig":"12"},{"size":525,"mtime":1612748858780,"results":"20","hashOfConfig":"12"},{"size":1618,"mtime":1612754757262,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"13cki3r",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},"E:\\SportStore\\theme-store-sport\\src\\App.js",["51","52","53"],"import './css/App.css';\r\nimport React, { Component } from 'react'\r\nimport Login from './components/users/Login';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport RouterLink from './router/RouterLink';\r\nimport Header from './components/headers/Header';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n   constructor(props){\r\n      super(props);\r\n      this.state = {\r\n      };  \r\n   }\r\n   checkAuth  = () => {\r\n      if(localStorage.getItem(\"token\")){\r\n         return (\r\n                  <Router>\r\n                     { window.location.pathname === '/login' ? null : <Header /> }\r\n                     {\r\n                        window.location.pathname === '/login' ? window.location.href = \"/dashboard\" : null \r\n                     }\r\n                     <RouterLink />\r\n                     <ToastContainer />\r\n                  </Router>\r\n               )\r\n      }else{\r\n         return (\r\n            <>\r\n               <Login />\r\n               <ToastContainer />\r\n            </>\r\n         );\r\n      }\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            {this.checkAuth()}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n","E:\\SportStore\\theme-store-sport\\src\\components\\brands\\InsertBrand.js",[],["54","55"],"E:\\SportStore\\theme-store-sport\\src\\components\\products\\ListProduct.js",["56"],"import React, { Component } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nconst axios = require('axios').default;\r\nconst libs = require(\"../../libs/libs\");\r\n\r\nexport default class ListProduct extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        await axios.get('http://localhost:3100/products').then(response => { \r\n            if(response.data.result){\r\n                this.setState({\r\n                    data: response.data.result\r\n                })\r\n            }\r\n        })\r\n    }\r\n    showData = () => {\r\n        if(this.state.data.length > 0){\r\n            let i = 1;\r\n            return this.state.data.map((value, key) => {\r\n                return  <tr key={value.id}>\r\n                            <td>{i++}</td>\r\n                            <td><img src={\"http://localhost:3100/\"+value.image_product} /></td>\r\n                            <td>{libs.limitText(value.name_product, 8)}</td>\r\n                            <td><NumberFormat value={value.price_product} displayType={'text'} thousandSeparator={true} /></td>\r\n                            <td><NumberFormat value={value.sale_product} displayType={'text'} thousandSeparator={true} /></td>\r\n                            <td><NumberFormat value={value.quantity_product} displayType={'text'} thousandSeparator={true} /></td>\r\n                            <td>\r\n                                <button className=\"btn btn-primary\">Sửa</button>\r\n                                <button className=\"btn btn-danger\">Xóa</button>\r\n                            </td>\r\n                        </tr>\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>image</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Sale</th>\r\n                        <th>Quantity</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.showData()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n","E:\\SportStore\\theme-store-sport\\src\\libs\\libs.js",[],["57","58"],"E:\\SportStore\\theme-store-sport\\src\\components\\users\\Login.js",["59"],"import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nconst {limitText, noticeMessage} = require('../../libs/libs');\r\nconst axios = require('axios').default;\r\n\r\nexport default class Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: '',\r\n            status: false\r\n        };\r\n    }\r\n    isChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    isChangeRegister = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    onLogin = (e) => {\r\n        e.preventDefault();\r\n        const data = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        axios.post(\"http://localhost:3100/users/login\", data).then((response)=>{\r\n            if(response.status === 200){\r\n                localStorage.setItem('user', JSON.stringify(response.data.user));\r\n                localStorage.setItem('token', response.data.token);\r\n                localStorage.setItem('rule', response.data.user.rule);\r\n                window.location.href = '/dashboard'\r\n            }\r\n        }).catch((err)=>{\r\n            if(err.response.data.message === \"ERROR VALIDATES\"){\r\n                if(err.response.status === 400){\r\n                    if($(\".\"+err.response.data.result.details[0].context.key).find()){\r\n                        if($(\".msg-error\").find()){\r\n                            $(\".msg-error\").remove();\r\n                        }\r\n                        $(\".\"+err.response.data.result.details[0].context.key).append(\"<p class='msg-error'>\"+err.response.data.result.details[0].message+\"</p>\");\r\n                    }\r\n                }\r\n            }else{\r\n                noticeMessage(err.response.data.message);\r\n            }\r\n        })\r\n    }\r\n    onRegister = (e) => {\r\n        e.preventDefault();\r\n        const data = {\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        axios.post(\"http://localhost:3100/users/register\", data).then((response)=>{\r\n            if(response.status === 200){\r\n                noticeMessage(response.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            if(err.response.data.message === \"ERROR VALIDATES\"){\r\n                if(err.response.status === 400){\r\n                    if($(\".\"+err.response.data.result.details[0].context.key).find()){\r\n                        if($(\".msg-error\").find()){\r\n                            $(\".msg-error\").remove();\r\n                        }\r\n                        $(\".\"+err.response.data.result.details[0].context.key).append(\"<p class='msg-error'>\"+err.response.data.result.details[0].message+\"</p>\");\r\n                    }\r\n                }\r\n            }else{\r\n                noticeMessage(err.response.data.message);\r\n            }\r\n        })\r\n    }\r\n    showForm = () => {\r\n        if(this.state.status === false){\r\n            return (\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <h3>ĐĂNG NHẬP</h3>\r\n                    </div>\r\n                    <div className=\"form-group email\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" onChange={(event)=>this.isChange(event)} name=\"email\" placeholder=\"Enter email\" />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div className=\"form-group password\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" onChange={(event)=>this.isChange(event)} name=\"password\" placeholder=\"Password\" />\r\n                    </div>\r\n                    <div className=\"form-group form-check\">\r\n                        <a href=\"/#\" className=\"register-link\" onClick={(e) => this.checkForm()}>Đăng Ký</a>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={(e)=>this.onLogin(e)}>Đăng Nhập</button>\r\n                </form>\r\n            )\r\n        }else{\r\n            return (\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <h3>ĐĂNG KÝ</h3>\r\n                    </div>\r\n                    <div className=\"form-group first_name\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Họ</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={(event)=>this.isChangeRegister(event)} name=\"first_name\" placeholder=\"Họ\" />\r\n                    </div>\r\n                    <div className=\"form-group last_name\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Tên</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={(event)=>this.isChangeRegister(event)} name=\"last_name\" placeholder=\"Tên\" />\r\n                    </div>\r\n                    <div className=\"form-group email\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n                        <input type=\"email\" className=\"form-control\" onChange={(event)=>this.isChangeRegister(event)} name=\"email\" placeholder=\"Email\" />\r\n                    </div>\r\n                    <div className=\"form-group password\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Mật khẩu</label>\r\n                        <input type=\"password\" className=\"form-control\" onChange={(event)=>this.isChangeRegister(event)} name=\"password\" placeholder=\"Mật khẩu\" />\r\n                    </div>\r\n                    <div className=\"form-group form-check\">\r\n                        <a href=\"/#\" className=\"register-link\" onClick={(e) => this.checkForm()}>Đăng Nhập</a>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={(e)=>this.onRegister(e)}>Đăng Ký</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n    checkForm = async () => {\r\n        this.setState({\r\n            status : !this.state.status\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.showForm()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","E:\\SportStore\\theme-store-sport\\src\\router\\RouterLink.js",["60","61"],"import React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport InsertBrand from '../components/brands/InsertBrand';\r\nimport ShowProduct from '../components/homes/ShowProduct';\r\nimport InsertProduct from '../components/products/InsertProduct';\r\nimport ListProduct from '../components/products/ListProduct';\r\nimport Login from '../components/users/Login';\r\n\r\nexport default class RouterLink extends Component {\r\n    render() {\r\n        return (\r\n           \r\n            <Switch>\r\n                <Route exact path=\"/dashboard\">\r\n                    <ShowProduct />\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                    <Login />\r\n                </Route>\r\n                <Route path=\"/dashboard/insert-product\">\r\n                    <InsertProduct />\r\n                </Route>\r\n                <Route path=\"/dashboard/list-product\">\r\n                    <ListProduct />\r\n                </Route>\r\n                <Route path=\"/dashboard/insert-brand\">\r\n                    <InsertBrand />\r\n                </Route>\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n","E:\\SportStore\\theme-store-sport\\src\\components\\products\\InsertProduct.js",["62"],"import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nconst {limitText, noticeMessage} = require('../../libs/libs');\r\nconst axios = require('axios').default;\r\n\r\nexport default class InsertProduct extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dataBrands: [],\r\n            name_product: '',\r\n            price_product: '',\r\n            sale_product: '',\r\n            quantity_product: '',\r\n            image_product: [],\r\n            description_product: '',\r\n            id_brand: ''\r\n        };\r\n        this.form = React.createRef();\r\n    }\r\n    isChange = (event) => {\r\n        $(\".msg-error\").remove();\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    isChangeFile = (event) => {\r\n        const files = [...this.state.image_product];\r\n        files.push(...event.target.files);\r\n        this.setState({\r\n            image_product: files\r\n        });\r\n    }\r\n    onClickAddProduct = async (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData();\r\n        data.append(\"name_product\", this.state.name_product);\r\n        data.append(\"price_product\", this.state.price_product);\r\n        data.append(\"sale_product\", this.state.sale_product);\r\n        data.append(\"quantity_product\", this.state.quantity_product);\r\n        data.append(\"description_product\", this.state.description_product);\r\n        data.append(\"id_brand\", this.state.id_brand);\r\n        this.state.image_product.forEach((file) => data.append('image_product', file));\r\n        // const progress = {\r\n        //     onUploadProgress: progressEvent => {\r\n        //         this.notify(\"upload thành công\" + Math.round(progressEvent.loaded / progressEvent.total * 100) + \"%\");\r\n        //     }\r\n        // }\r\n        await axios.post('http://localhost:3100/products', data).then(response => {\r\n            if(response.data.status === true){\r\n                noticeMessage(response.data.message);\r\n                this.form.current.reset();\r\n            }\r\n        }).catch(function (error) {\r\n            if(error.response.status === 400){\r\n                if($(\".\"+error.response.data.result.details[0].context.key).find()){\r\n                    if($(\".msg-error\").find()){\r\n                        $(\".msg-error\").remove();\r\n                    }\r\n                    $(\".\"+error.response.data.result.details[0].context.key).append(\"<p class='msg-error'>\"+error.response.data.result.details[0].message+\"</p>\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        await axios.get('http://localhost:3100/brands').then(response => { \r\n            this.setState({\r\n                dataBrands: response.data.result\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    showDataBrands = () => {\r\n        if(this.state.dataBrands.length > 0){\r\n            return this.state.dataBrands.map((value, key) => {\r\n                return <option key={value.id} value={value.id} >{value.name_brand}</option>\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <form ref={this.form}>\r\n                    <div className=\"form-group id_brand\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Tên sản phẩm</label>\r\n                        <select onChange={(event) => this.isChange(event)} className=\"form-control\" name=\"id_brand\">\r\n                            <option>Vui lòng chọn</option>\r\n                            {this.showDataBrands()}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group name_product\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Tên sản phẩm</label>\r\n                        <input type=\"text\" onChange={(event)=>this.isChange(event)} className=\"form-control\" placeholder=\"Tên sản phẩm\" name=\"name_product\" />\r\n                    </div>\r\n                    <div className=\"form-group price_product\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Giá sản phẩm</label>\r\n                        <input type=\"text\" onChange={(event)=>this.isChange(event)} className=\"form-control\" placeholder=\"Giá sản phẩm\" name=\"price_product\" />\r\n                    </div>\r\n                    <div className=\"form-group sale_product\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Giá sale sản phẩm</label>\r\n                        <input type=\"text\" onChange={(event)=>this.isChange(event)} className=\"form-control\" placeholder=\"Giá sale sản phẩm\" name=\"sale_product\" />\r\n                    </div>\r\n                    <div className=\"form-group quantity_product\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Số lượng sản phẩm</label>\r\n                        <input type=\"text\" onChange={(event)=>this.isChange(event)} className=\"form-control\" placeholder=\"Số lượng sản phẩm\" name=\"quantity_product\" />\r\n                    </div>\r\n                    <div className=\"form-group image_product\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Hình ảnh sản phẩm</label>\r\n                        <input type=\"file\" multiple onChange={(event)=>this.isChangeFile(event)} className=\"form-control\" placeholder=\"Hình ảnh sản phẩm\" name=\"image_product\" />\r\n                    </div>\r\n                    <div className=\"form-group description_product\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Mô tả sản phẩm</label>\r\n                        <CKEditor\r\n                            editor={ ClassicEditor }\r\n                            onReady={ editor => {\r\n                                // You can store the \"editor\" and use when it is needed.\r\n                                // console.log( 'Editor is ready to use!', editor );\r\n                            } }\r\n                            onChange={ ( event, editor ) => {\r\n                                const data = editor.getData();\r\n                                this.setState({\r\n                                    description_product: data\r\n                                })\r\n                            } }\r\n                        />\r\n                    </div>\r\n                    <button type=\"reset\" onClick={(event)=>this.onClickAddProduct(event)} className=\"btn btn-primary\">Thêm mới</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n",["63","64"],"E:\\SportStore\\theme-store-sport\\src\\components\\headers\\Header.js",["65"],"E:\\SportStore\\theme-store-sport\\src\\index.js",[],"E:\\SportStore\\theme-store-sport\\src\\components\\homes\\ShowProduct.js",["66","67"],"import React, { Component } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nconst axios = require('axios').default;\r\nconst libs = require(\"../../libs/libs\");\r\n\r\nexport default class ShowProduct extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        await axios.get('http://localhost:3100/products').then(response => { \r\n            if(response.data.result){\r\n                this.setState({\r\n                    data: response.data.result\r\n                })\r\n            }\r\n        })\r\n    }\r\n    showData = () => {\r\n        if(this.state.data.length > 0){\r\n            let i = 1;\r\n            return this.state.data.map((value, key) => {\r\n                return  <div className=\"col-sm-3 card\">\r\n                            <img src={\"http://localhost:3100/\"+value.image_product} className=\"card-img-top\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{libs.limitText(value.name_product, 8)}</h5>\r\n                                <p className=\"card-text\"><NumberFormat value={value.price_product} displayType={'text'} thousandSeparator={true} /> VND</p>\r\n                                <a href=\"#\" className=\"btn btn-primary\">Thêm giỏ hàng</a>\r\n                            </div>\r\n                        </div>\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {this.showData()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"68","severity":1,"message":"69","line":4,"column":34,"nodeType":"70","messageId":"71","endLine":4,"endColumn":40},{"ruleId":"68","severity":1,"message":"72","line":4,"column":42,"nodeType":"70","messageId":"71","endLine":4,"endColumn":47},{"ruleId":"68","severity":1,"message":"73","line":4,"column":49,"nodeType":"70","messageId":"71","endLine":4,"endColumn":53},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":28,"column":33,"nodeType":"80","endLine":28,"endColumn":91},{"ruleId":"74","replacedBy":"81"},{"ruleId":"76","replacedBy":"82"},{"ruleId":"68","severity":1,"message":"83","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":17},{"ruleId":"68","severity":1,"message":"84","line":2,"column":26,"nodeType":"70","messageId":"71","endLine":2,"endColumn":32},{"ruleId":"68","severity":1,"message":"73","line":2,"column":49,"nodeType":"70","messageId":"71","endLine":2,"endColumn":53},{"ruleId":"68","severity":1,"message":"83","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":17},{"ruleId":"74","replacedBy":"85"},{"ruleId":"76","replacedBy":"86"},{"ruleId":"68","severity":1,"message":"84","line":2,"column":26,"nodeType":"70","messageId":"71","endLine":2,"endColumn":32},{"ruleId":"68","severity":1,"message":"87","line":24,"column":17,"nodeType":"70","messageId":"71","endLine":24,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":31,"column":33,"nodeType":"80","endLine":31,"endColumn":73},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["90"],["91"],"'limitText' is assigned a value but never used.","'Router' is defined but never used.",["90"],["91"],"'i' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]